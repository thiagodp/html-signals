TO-DO:

- new data types to use in send-as and receive-as:
  OK- boolean
  - date      -> "year-month-day"
  - time      -> "hour:minute:second.millis" or "hour:minute:second" or "hour:minute"
  - datetime  -> "year-month-day'T'hour:minute:second.millis'Z'"

OK- include fetchOptions in register()'s options

- include fetch timeout in fetchOptions
- include option to indicate the desired id field name for forms

OK- include option to fetch image content

- send-prop with multiple properties, in order.
    -> send-as is repeated for every property if not declared ?
    -> send-to with more than one element receive all the properties, or the properties in order?
- send-on with multiple events, in order

OK- headers for all http-related properties
  - e.g.: headers="{ 'X-Foo': 'Bar' }"

- on-receive with async function (?)

- on-mutate ?


ðŸ‘‡ ?
- send-on="enter-viewport"
- send-on="leave-viewport" (once)
- send-on="visible" (once)
- send-on="enabled" (once)

Is it worth it to create events like "on-enter-viewport" and "on-leave-viewport" ?

visible --> assumes that the element starts as not visible
not-visible --> assumes that the element starts as visible

ðŸ‘‡
- send-once=true
  OK-> addEventListener( ..., { once: true } );
  -> affects viewport and visibility events


OK- Fix 'send' with event 'receive'

- send-to="$storage" ?
Example:
  button
    data-obj="{title:'Foo', completed:false}"
    send="data-obj|click|$storage,div|true"
    storage-options={json: 'array', key: 'items'}

  div

OK- send-return="JSON.parse( localStorage.items || '[]' )";
  send-as="json"